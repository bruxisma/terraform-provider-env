name: Tests
on:
  pull_request:
    paths-ignore:
      - '**.md'
  push:
    paths-ignore:
      - '**.md'
jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - name: Checkout
        uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579 # tag=v2
      - name: Setup Go
        uses: actions/setup-go@f6164bd8c8acb4a71fb2791a8b6c4024ff038dab # tag=v3
        with:
          go-version: 1.16
      - name: Find Module Cache Directory
        run: echo "::set-output name=dir::$(go env GOMODCACHE)"
        id: go-mod-cache
      - name: Restore Module Cache
        uses: actions/cache@937d24475381cd9c75ae6db12cb4e79714b926ed # tag=v2
        with:
          restore-keys: ${{ runner.os }}-go-
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          path: ${{ steps.go-mod-cache.outputs.dir }}
      - name: Update Dependencies
        run: go mod download
      - name: Build
        run: go build -v ${{github.workspace}}
  test:
    name: Test
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        terraform: ['0.15.3']
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - name: Checkout
        uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579 # tag=v2
      - name: Setup Go
        uses: actions/setup-go@f6164bd8c8acb4a71fb2791a8b6c4024ff038dab # tag=v3
        with:
          go-version: 1.16
      - name: Find Module Cache Directory
        run: echo "::set-output name=dir::$(go env GOMODCACHE)"
        id: go-mod-cache
      - name: Restore Module Cache
        uses: actions/cache@937d24475381cd9c75ae6db12cb4e79714b926ed # tag=v2
        with:
          restore-keys: ${{ runner.os }}-go-
          path: ${{ steps.go-mod-cache.outputs.dir }}
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
      - name: Update Dependencies
        run: go mod download
      - name: Terraform Acceptance Tests
        run: >-
          go test -v
          -race
          -coverprofile coverage.out
          -covermode=atomic
          -cover ${{github.workspace}}/env
        env:
          TF_ACC_TERRAFORM_VERSION: ${{ matrix.terraform }}
          TF_ACC: 1
      - name: Upload Code Coverage
        uses: codecov/codecov-action@v2.1.0
        with:
          fail_ci_if_error: true
          directory: ${{ github.workspace }}
          token: ${{ secrets.CODECOV_TOKEN }}
          files: coverage.out
